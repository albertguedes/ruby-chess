c
s
@grid[xstart][ystart]
moved_piece.pos
s
@grid[xend][yend]
s
moved_piece.pos
end_pos
moved_piece.pos
moved_piece
s
self
end_pos
start_pos
s
n
s
c
n
s
c
exit
end_pos
moving_piece.pos
moving_piece
dup_board.check?(moving_piece.color)
s
d.render
d.build_grid
d = Display.new(dup_board)
dup_board
sup_board
n
s
moved_into_check?(moving_piece, end_pos)
moving_piece
c
moved_into_check?(moving_piece, end_pos)
c
exit
moving_piece.opposite_color
check?(:white)
check?(:black)
n
end_pos
end_os
moving_piece.pos
n
@grid[end_row][end_col]
n
moved_into_check?(moving_piece, end_pos)
n
possible_moves.include?(end_pos)
end_pos
possible_moves
moving_piece.pos
moving_piece
moving_piece.color
exit
moving_piece.color
c
moving_piece
n
exit
@grid[start_row][start_col]
start
moving_piece
c
opposite_color
@color
n
possible_moves
end_pos
n
s
move
s
@grid[x][y].color
@grid[x][y]
s
@color
s
moving_piece
possible_moves
s
moving_piece
s
color
s
c
s
@current_player
pos_2
pos_1
n
@board
